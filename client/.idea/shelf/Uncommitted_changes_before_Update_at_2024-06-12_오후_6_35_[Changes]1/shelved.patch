Index: ../package-lock.json
===================================================================
diff --git a/../package-lock.json b/../package-lock.json
deleted file mode 100644
--- a/../package-lock.json	
+++ /dev/null	
@@ -1,6 +0,0 @@
-{
-  "name": "Extravel",
-  "lockfileVersion": 3,
-  "requires": true,
-  "packages": {}
-}
Index: ../.idea/jarRepositories.xml
===================================================================
diff --git a/../.idea/jarRepositories.xml b/../.idea/jarRepositories.xml
deleted file mode 100644
--- a/../.idea/jarRepositories.xml	
+++ /dev/null	
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="MavenRepo" />
-      <option name="name" value="MavenRepo" />
-      <option name="url" value="https://repo.maven.apache.org/maven2/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/Extravel.iml
===================================================================
diff --git a/../.idea/Extravel.iml b/../.idea/Extravel.iml
deleted file mode 100644
--- a/../.idea/Extravel.iml	
+++ /dev/null	
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: ../.idea/misc.xml
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
deleted file mode 100644
--- a/../.idea/misc.xml	
+++ /dev/null	
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/.gitignore
===================================================================
diff --git a/../.idea/.gitignore b/../.idea/.gitignore
deleted file mode 100644
--- a/../.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../.idea/modules.xml
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
deleted file mode 100644
--- a/../.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Extravel.iml" filepath="$PROJECT_DIR$/.idea/Extravel.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: src/components/main/intro/Section3.css
===================================================================
diff --git a/src/components/main/intro/Section3.css b/src/components/main/intro/Section3.css
deleted file mode 100644
--- a/src/components/main/intro/Section3.css	
+++ /dev/null	
@@ -1,148 +0,0 @@
-@font-face {
-  font-family: 'TTLaundryGothicB';
-  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2403-2@1.0/TTLaundryGothicB.woff2') format('woff2');
-  font-weight: 700;
-  font-style: normal;
-}
-
-@font-face {
-  font-family: 'Ownglyph_jooreeletter-Rg';
-  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2405-2@1.0/Ownglyph_jooreeletter-Rg.woff2') format('woff2');
-  font-weight: normal;
-  font-style: normal;
-}
-
-body, html {
-    margin: 0;
-    padding: 0;
-    height: 100%;
-    
-  }
-  
-  .container {
-    display: flex;
-    justify-content: center;
-    align-items: center;
-    height: 100vh;
-    background-image: url('../../../assets/img/123.jpg'); 
-    background-size: cover;
-    background-position: center;
-  }
-  
-  .box1 {
-    height: 70%;
-    width: calc(80% / 3); 
-    margin: 0 0.3%; 
-    background-color: rgba(255, 255, 255); 
-    overflow: hidden;
-    
-  }
-  .box2{
-    height: 70%;
-    width: calc(80% / 3); 
-    margin: 0 0.3%; 
-    background-color: rgba(255, 255, 255);
-    background-image: url('../../../assets/img/a5.jpg');
-    background-size: cover;
-  background-position: center;
-  align-items: center;
-  }
-  .box3 {
-    height: 70%;
-    width: calc(50% / 3); 
-    margin: 0 0.3%; 
-    background-color: rgba(255, 255, 255);
-    overflow: hidden;
-  }
-  
-  .spacer {
-    flex-grow: 1;
-  }
-
-  .minibox1Youtube, .minibox1Text {
-    height: 50%;
-    display: flex;
-    justify-content: center;
-    
-  
-  }
-  
-  .minibox1Youtube {
-     margin: 30px;
-    
-  }
-  
-  .minibox1Text {
-    background-color: white; 
-    text-align: left; 
-    flex-direction: column; 
-    justify-content: flex-start; 
-    color: black;
-    font-family: 'Ownglyph_jooreeletter-Rg';
-    font-size: 25px;
-    padding-left: 10px; 
-    text-align: left;
-
-}
-
-.minibox1Text h1 {
-    margin: 0; 
-    padding-bottom: 10px; 
-    font-family: 'TTLaundryGothicB'; 
-    color: black;   
-}
-  h1 {
-    font-family: 'TTLaundryGothicB';
-    font-size: 30px;
-  }
-
-  .minibox2Text {
-    
-    text-align: left; 
-    flex-direction: column; 
-    justify-content: flex-start; 
-    color: black;
-    font-family: 'Ownglyph_jooreeletter-Rg';
-    font-size: 25px;
-    padding-left: 10px; 
-    padding-top: 76%;
-    color: white;
-  }
-  .minibox2Text h1 {
-    color: white;
-    font-size: 30px;
-  }
-  .minibox3Text {
-    background-color: white; 
-    text-align: left; 
-    flex-direction: column; 
-    justify-content: flex-start; 
-    color: black;
-    font-family: 'Ownglyph_jooreeletter-Rg';
-    font-size: 25px;
-    padding-left: 10px;
-    text-align: left;
-  }
-  .minibox3Text h1 {
-    color: black;
-    font-size: 25px;
-    
-  }
-  .minibox3Picture {
-    background-image: url(../../../assets/img/a6.jpg);
-  border-radius: 50%;
-  margin-left: 15px;
-    margin-right: 15px;
-  margin-top: 10px;
-  background-repeat: no-repeat;
-  background-position: center;
-  align-items: center;
-  }
-  .minibox3Picture, .minibox3Text {
-    height: 50%;
-    display: flex;
-    justify-content: center;
-    /* align-items: center; */
-    
-   
-  }
\ No newline at end of file
Index: ../.idea/vcs.xml
===================================================================
diff --git a/../.idea/vcs.xml b/../.idea/vcs.xml
deleted file mode 100644
--- a/../.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/compiler.xml
===================================================================
diff --git a/../.idea/compiler.xml b/../.idea/compiler.xml
deleted file mode 100644
--- a/../.idea/compiler.xml	
+++ /dev/null	
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CompilerConfiguration">
-    <annotationProcessing>
-      <profile name="Gradle Imported" enabled="true">
-        <outputRelativeToContentRoot value="true" />
-        <processorPath useClasspath="false">
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.projectlombok/lombok/1.18.32/17d46b3e205515e1e8efd3ee4d57ce8018914163/lombok-1.18.32.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.querydsl/querydsl-apt/5.0.0/d48657412f2b96d787bbe5ae393e33815c94b4d0/querydsl-apt-5.0.0-jakarta.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.querydsl/querydsl-codegen/5.1.0/a8504ea51fbc2258543cedab6a37fe6039b2d20a/querydsl-codegen-5.1.0.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.querydsl/querydsl-core/5.1.0/be322c3fe98de8e7c204afb8860bfabd81a3bafd/querydsl-core-5.1.0.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.querydsl/codegen-utils/5.1.0/ba401554d613760617992eafb6cdba175c811e6f/codegen-utils-5.1.0.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/javax.inject/javax.inject/1/6975da39a7040257bd51d21a231b76c915872d38/javax.inject-1.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/io.github.classgraph/classgraph/4.8.146/360448a09bfa5689d89cfa97fea53b3fdefa9c23/classgraph-4.8.146.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.mysema.commons/mysema-commons-lang/0.2.4/d09c8489d54251a6c22fbce804bdd4a070557317/mysema-commons-lang-0.2.4.jar" />
-          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.eclipse.jdt/ecj/3.26.0/4837be609a3368a0f7e7cf0dc1bdbc7fe94993de/ecj-3.26.0.jar" />
-        </processorPath>
-        <module name="extravel.main" />
-      </profile>
-    </annotationProcessing>
-  </component>
-</project>
\ No newline at end of file
Index: src/components/main/intro/Section1.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport '../../../scss/Section1.scss';\r\nimport rectangle from '../../../assets/img/home2.jpg';\r\n\r\nconst Section1 = () => {\r\n  return (\r\n    <>\r\n      <div className='body'>\r\n        <div className='left'>\r\n          <h1 className='title'>\r\n            Exchange\r\n            <br />\r\n            Travel\r\n          </h1>\r\n          <h5>\r\n            환전하면 적립되는 포인트로 투어 패키지를 구매해\r\n            더욱 큰 혜택을 누리세요.\r\n          </h5>\r\n          <button className='explore'>Explore</button>\r\n        </div>\r\n        <div className='side-rectangle'>\r\n          <div>\r\n            5 best places <br /> to visit <br />\r\n            <button className='more'>More →</button>\r\n          </div>\r\n          <img src={rectangle} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section1;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/main/intro/Section1.jsx b/src/components/main/intro/Section1.jsx
--- a/src/components/main/intro/Section1.jsx	
+++ b/src/components/main/intro/Section1.jsx	
@@ -1,8 +1,20 @@
 import React from 'react';
 import '../../../scss/Section1.scss';
 import rectangle from '../../../assets/img/home2.jpg';
+import {
+  Routes,
+  Route,
+  useNavigate,
+} from 'react-router-dom';
+
+import Login from '../../user/Login';
 
 const Section1 = () => {
+  const navigate = useNavigate();
+  const goToLogin = () => {
+    navigate('/Login');
+  };
+
   return (
     <>
       <div className='body'>
@@ -16,7 +28,9 @@
             환전하면 적립되는 포인트로 투어 패키지를 구매해
             더욱 큰 혜택을 누리세요.
           </h5>
-          <button className='explore'>Explore</button>
+          <button className='explore' onClick={goToLogin}>
+            Explore
+          </button>
         </div>
         <div className='side-rectangle'>
           <div>
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	
+++ b/package-lock.json	
@@ -26,7 +26,7 @@
         "react-dom": "^18.3.1",
         "react-hook-form": "^7.51.5",
         "react-icons": "^5.2.1",
-        "react-router-dom": "^6.23.0",
+        "react-router-dom": "^6.23.1",
         "react-scripts": "5.0.1",
         "react-select": "^5.8.0",
         "react-slick": "^0.30.2",
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"client\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@hookform/resolvers\": \"^3.6.0\",\r\n    \"@mui/icons-material\": \"^5.15.17\",\r\n    \"@mui/material\": \"^5.15.19\",\r\n    \"@testing-library/jest-dom\": \"^5.17.0\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^13.5.0\",\r\n    \"axios\": \"^1.7.2\",\r\n    \"bootstrap\": \"^5.3.3\",\r\n    \"classnames\": \"^2.5.1\",\r\n    \"framer-motion\": \"^11.2.10\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"popmotion\": \"^11.0.5\",\r\n    \"react\": \"^18.3.1\",\r\n    \"react-dom\": \"^18.3.1\",\r\n    \"react-hook-form\": \"^7.51.5\",\r\n    \"react-icons\": \"^5.2.1\",\r\n    \"react-router-dom\": \"^6.23.0\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"react-select\": \"^5.8.0\",\r\n    \"react-slick\": \"^0.30.2\",\r\n    \"reactstrap\": \"^9.2.2\",\r\n    \"sass\": \"^1.77.0\",\r\n    \"semantic-ui-react\": \"^2.1.5\",\r\n    \"slick-carousel\": \"^1.8.1\",\r\n    \"styled-components\": \"^6.1.11\",\r\n    \"web-vitals\": \"^2.1.4\",\r\n    \"yup\": \"^1.4.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\",\r\n      \"prettier\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@eslint/js\": \"^9.1.1\",\r\n    \"babel-eslint\": \"^10.1.0\",\r\n    \"eslint\": \"^8.57.0\",\r\n    \"eslint-config-prettier\": \"^9.1.0\",\r\n    \"eslint-config-standard\": \"^17.1.0\",\r\n    \"eslint-plugin-import\": \"^2.29.1\",\r\n    \"eslint-plugin-n\": \"^16.6.2\",\r\n    \"eslint-plugin-prettier\": \"^5.1.3\",\r\n    \"eslint-plugin-promise\": \"^6.1.1\",\r\n    \"eslint-plugin-react\": \"^7.34.2\",\r\n    \"globals\": \"^15.1.0\",\r\n    \"prettier\": \"^3.2.5\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	
+++ b/package.json	
@@ -21,7 +21,7 @@
     "react-dom": "^18.3.1",
     "react-hook-form": "^7.51.5",
     "react-icons": "^5.2.1",
-    "react-router-dom": "^6.23.0",
+    "react-router-dom": "^6.23.1",
     "react-scripts": "5.0.1",
     "react-select": "^5.8.0",
     "react-slick": "^0.30.2",
Index: src/scss/Login.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background: #f6f5f7;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-family: 'Montserrat', sans-serif;\r\n  height: 100vh;\r\n  margin: -20px 0 50px;\r\n}\r\n\r\nh1 {\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 100;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  margin: 20px 0 30px;\r\n}\r\n\r\nspan {\r\n  font-size: 12px;\r\n}\r\n\r\na {\r\n  color: #333;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  margin: 15px 0;\r\n}\r\n\r\nbutton {\r\n  border-radius: 20px;\r\n  border: 1px solid #FF4B2B;\r\n  background-color: #FF4B2B;\r\n  color: #FFFFFF;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 12px 45px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\nbutton:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\nbutton.ghost {\r\n  background-color: transparent;\r\n  border-color: #FFFFFF;\r\n}\r\n\r\nform {\r\n  background-color: #FFFFFF;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 50px;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  background-color: #eee;\r\n  border: none;\r\n  padding: 12px 15px;\r\n  margin: 8px 0;\r\n  width: 100%;\r\n}\r\n\r\n.container {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n    box-shadow: 0 14px 28px rgba(0,0,0,0.25), \r\n      0 10px 10px rgba(0,0,0,0.22);\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 768px;\r\n  max-width: 100%;\r\n  min-height: 700px;\r\n}\r\n\r\n.form-container {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.sign-in-container {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .sign-in-container {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.sign-up-container {\r\n  left: 0;\r\n  width: 50%;\r\n  opacity: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .sign-up-container {\r\n  transform: translateX(100%);\r\n  opacity: 1;\r\n  z-index: 5;\r\n  animation: show 0.6s;\r\n}\r\n\r\n@keyframes show {\r\n  0%, 49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n  \r\n  50%, 100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n.overlay-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  transition: transform 0.6s ease-in-out;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .overlay-container{\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background: #FF416C;\r\n  background: -webkit-linear-gradient(to right, #ff0000, #2600ff, #ffffff);\r\n  background: linear-gradient(to right, #1f2186, #b1db4f, #6b1b1b);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 0 0;\r\n  color: #FFFFFF;\r\n  position: relative;\r\n  left: -100%;\r\n  height: 100%;\r\n  width: 200%;\r\n    transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n    transform: translateX(50%);\r\n}\r\n\r\n.overlay-panel {\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n  text-align: center;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 50%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.overlay-left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay-left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay-right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay-right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.social-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.social-container a img {\r\n  width: 100%;\r\n\r\n}\r\n\r\n.social-container a {\r\n  border: 1px solid #DDDDDD;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\nfooter {\r\n    background-color: #222;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    bottom: 0;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/scss/Login.scss b/src/scss/Login.scss
--- a/src/scss/Login.scss	
+++ b/src/scss/Login.scss	
@@ -95,7 +95,7 @@
   overflow: hidden;
   width: 768px;
   max-width: 100%;
-  min-height: 700px;
+  // min-height: 500px;
 }
 
 .form-container {
@@ -204,7 +204,7 @@
   transform: translateX(0);
 }
 
-.container.right-panel-active .overlay-right {
+.container.right-panel-active .overly-riaght {
   transform: translateX(20%);
 }
 
Index: src/components/main/intro/Section3.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport '../intro/Section3.css';\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='spacer'></div>\r\n      <div className='box1'>\r\n        <div className='minibox1Youtube'>\r\n          <iframe\r\n            width='560'\r\n            height='315'\r\n            src='https://www.youtube.com/embed/LkAREImGcBs'\r\n            allowfullscreen\r\n          ></iframe>\r\n        </div>\r\n        <div className='minibox1Text'>\r\n          <h1>삿포로 거기가 어딘데?</h1>\r\n          일본여행고수가 소개해주는 랜선투어\r\n          <br /> 도쿄에서부터 일본전지역\r\n          <br />\r\n          낯선여행지도 두렵지않아요~\r\n          <br />\r\n          초밥! 돈카츠도 놓치지마세요!!\r\n        </div>\r\n      </div>\r\n      <div className='box2'>\r\n        <div className='minibox2Text'>\r\n          <h1>삿포로는 언제부터 아름다웠을까</h1>\r\n          여행하기좋은따뜻한날씨\r\n          <br />\r\n          아름다운 풍경과 낭만을 품은 도시\r\n          <br />\r\n          눈밭을따라 늘어선 아름다운도시들\r\n          <br />\r\n          다양한 볼거리와 먹거리의 매력까지\r\n          <br />\r\n          <br />\r\n          우리는 지금바로 여기 삿포로!\r\n        </div>\r\n      </div>\r\n      <div className='box3'>\r\n        <div className='minibox3Picture'></div>\r\n        <div className='minibox3Text'>\r\n          <h1>지금 예약하면 정말좋은!</h1>\r\n          기대이상의 감동!\r\n          <br />\r\n          마음에 담는 진한 감동\r\n          <br />\r\n          오색빛 물의향연\r\n          <br />\r\n          힐링하기에최고인나라\r\n          <br />\r\n        </div>\r\n      </div>\r\n      <div className='spacer'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/main/intro/Section3.jsx b/src/components/main/intro/Section3.jsx
--- a/src/components/main/intro/Section3.jsx	
+++ b/src/components/main/intro/Section3.jsx	
@@ -1,5 +1,5 @@
 import React from 'react';
-import '../intro/Section3.css';
+import '../intro/Section3.module.css';
 
 const Section3 = () => {
   return (
Index: src/components/user/Login.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { Button, Grid, TextField } from '@mui/material';\r\nimport naverCircle from '../../assets/img/naver_circle.png';\r\nimport kakaoCircle from '../../assets/img/kakao_circle.png';\r\nimport googleCircle from '../../assets/img/google_circle.png';\r\n\r\nimport '../../scss/Login.scss';\r\n\r\nconst Login = () => {\r\n  // const { register, handleSubmit } = useForm();\r\n  const { control, handleSubmit } = useForm({\r\n    mode: 'onChange',\r\n  });\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  const [isRightPanelActive, setIsRightPanelActive] =\r\n    useState(false);\r\n\r\n  // 'Sign Up' 버튼 클릭 시 호출되는 함수\r\n  const handleSignUpClick = () => {\r\n    setIsRightPanelActive(true);\r\n  };\r\n\r\n  // 'Sign In' 버튼 클릭 시 호출되는 함수\r\n  const handleSignInClick = () => {\r\n    setIsRightPanelActive(false);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>EXTRAVEL LOGIN</h2>\r\n\r\n      <div\r\n        className={`container ${isRightPanelActive ? 'right-panel-active' : ''}`}\r\n      >\r\n        <div className='container'>\r\n          <div className='form-container sign-up-container'>\r\n            <form\r\n              action='#'\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <h1>Create Account</h1>\r\n              <div className='social-container'>\r\n                {/* 소셜 아이콘 (Facebook, Google, LinkedIn) */}\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={naverCircle}\r\n                  />\r\n                </a>\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={kakaoCircle}\r\n                  />\r\n                </a>\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={googleCircle}\r\n                  />\r\n                </a>\r\n              </div>\r\n              <span>\r\n                or use your email for registration\r\n              </span>\r\n              <Grid item>\r\n                <Grid\r\n                  container\r\n                  direction={'column'}\r\n                  spacing={3}\r\n                >\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='firstName'\r\n                      control={control}\r\n                      defaultValue={''}\r\n                      rules={{\r\n                        required: 'First Name is required',\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='First Name'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='lastName'\r\n                      control={control}\r\n                      defaultValue={''}\r\n                      rules={{\r\n                        required: 'Last Name is required',\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='Last Name'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='phone'\r\n                      defaultValue={''}\r\n                      control={control}\r\n                      rules={{\r\n                        required:\r\n                          'Phone Number is required',\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='Phone Number'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='email'\r\n                      control={control}\r\n                      defaultValue={''}\r\n                      rules={{\r\n                        required: 'Email ID is required',\r\n                        pattern: {\r\n                          value:\r\n                            /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                          message: 'Invalid email address',\r\n                        },\r\n                        minLength: {\r\n                          value: 6,\r\n                          message:\r\n                            'Email must be at least 6 characters',\r\n                        },\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='Email ID'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='password'\r\n                      defaultValue={''}\r\n                      control={control}\r\n                      rules={{\r\n                        required: 'Password is required',\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='Password'\r\n                          type='password'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Controller\r\n                      name='passwordConfirm'\r\n                      defaultValue={''}\r\n                      control={control}\r\n                      rules={{\r\n                        required: 'Password is required',\r\n                      }}\r\n                      render={({ field, fieldState }) => (\r\n                        <TextField\r\n                          label='Password'\r\n                          type='password'\r\n                          value={field.value}\r\n                          onChange={field.onChange}\r\n                          error={\r\n                            fieldState.error !== undefined\r\n                          }\r\n                          helperText={\r\n                            fieldState.error &&\r\n                            fieldState.error.message\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item style={{ width: '100%' }}>\r\n                    <Button\r\n                      type='submit'\r\n                      variant='contained'\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <div className='form-container sign-in-container'>\r\n            <form\r\n              action='#'\r\n              onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n              <h1>Sign in</h1>\r\n              <div className='social-container'>\r\n                {/* 소셜 로그인 아이콘 (네이버, 카카오, 구글) */}\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={naverCircle}\r\n                  />\r\n                </a>\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={kakaoCircle}\r\n                  />\r\n                </a>\r\n                <a href='#' className='social'>\r\n                  <img\r\n                    className='naverImg'\r\n                    alt='naverImg'\r\n                    src={googleCircle}\r\n                  />\r\n                </a>\r\n              </div>\r\n              <span>or use your account</span>\r\n              <input type='email' placeholder='Email' />\r\n              <input\r\n                type='password'\r\n                placeholder='Password'\r\n              />\r\n              <a href='#'>Forgot your password?</a>\r\n              <button>Sign In</button>\r\n            </form>\r\n          </div>\r\n          <div className='overlay-container'>\r\n            <div className='overlay'>\r\n              <div className='overlay-panel overlay-left'>\r\n                <h1>EXTRAVEL 회원가입 하기</h1>\r\n                <p>\r\n                  To keep connected with us please login\r\n                  with your personal info\r\n                </p>\r\n                <button\r\n                  className='ghost'\r\n                  id='signIn'\r\n                  onClick={handleSignInClick}\r\n                >\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n              <div className='overlay-panel overlay-right'>\r\n                <h1>EXTRAVEL 로그인 하기</h1>\r\n                <p>\r\n                  Enter your personal details and start\r\n                  journey with us\r\n                </p>\r\n                <button\r\n                  className='ghost'\r\n                  id='signUp'\r\n                  onClick={handleSignUpClick}\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/user/Login.jsx b/src/components/user/Login.jsx
--- a/src/components/user/Login.jsx	
+++ b/src/components/user/Login.jsx	
@@ -8,12 +8,18 @@
 import '../../scss/Login.scss';
 
 const Login = () => {
-  // const { register, handleSubmit } = useForm();
+  // useForm hook을 사용하여 form control을 설정
   const { control, handleSubmit } = useForm({
-    mode: 'onChange',
+    mode: 'onChange', // 폼 검증을 입력 중에도 반영하도록 설정
   });
+
+  //control은 react-hook-form의 폼 상태를 제어하는 객체(검증)
+  //handleSubmit 폼 제출을 처리하는 함수
+
+  // 폼 제출 시 호출되는 함수
   const onSubmit = (data) => console.log(data);
 
+  // 패널 상태를 관리하는 state
   const [isRightPanelActive, setIsRightPanelActive] =
     useState(false);
 
@@ -28,289 +34,294 @@
   };
   return (
     <>
-      <h2>EXTRAVEL LOGIN</h2>
+      <div className='body2'>
+        <h2>EXTRAVEL LOGIN</h2>
 
-      <div
-        className={`container ${isRightPanelActive ? 'right-panel-active' : ''}`}
-      >
-        <div className='container'>
-          <div className='form-container sign-up-container'>
-            <form
-              action='#'
-              onSubmit={handleSubmit(onSubmit)}
-            >
-              <h1>Create Account</h1>
-              <div className='social-container'>
-                {/* 소셜 아이콘 (Facebook, Google, LinkedIn) */}
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={naverCircle}
-                  />
-                </a>
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={kakaoCircle}
-                  />
-                </a>
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={googleCircle}
-                  />
-                </a>
-              </div>
-              <span>
-                or use your email for registration
-              </span>
-              <Grid item>
-                <Grid
-                  container
-                  direction={'column'}
-                  spacing={3}
-                >
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='firstName'
-                      control={control}
-                      defaultValue={''}
-                      rules={{
-                        required: 'First Name is required',
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='First Name'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='lastName'
-                      control={control}
-                      defaultValue={''}
-                      rules={{
-                        required: 'Last Name is required',
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='Last Name'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='phone'
-                      defaultValue={''}
-                      control={control}
-                      rules={{
-                        required:
-                          'Phone Number is required',
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='Phone Number'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='email'
-                      control={control}
-                      defaultValue={''}
-                      rules={{
-                        required: 'Email ID is required',
-                        pattern: {
-                          value:
-                            /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
-                          message: 'Invalid email address',
-                        },
-                        minLength: {
-                          value: 6,
-                          message:
-                            'Email must be at least 6 characters',
-                        },
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='Email ID'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='password'
-                      defaultValue={''}
-                      control={control}
-                      rules={{
-                        required: 'Password is required',
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='Password'
-                          type='password'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Controller
-                      name='passwordConfirm'
-                      defaultValue={''}
-                      control={control}
-                      rules={{
-                        required: 'Password is required',
-                      }}
-                      render={({ field, fieldState }) => (
-                        <TextField
-                          label='Password'
-                          type='password'
-                          value={field.value}
-                          onChange={field.onChange}
-                          error={
-                            fieldState.error !== undefined
-                          }
-                          helperText={
-                            fieldState.error &&
-                            fieldState.error.message
-                          }
-                        />
-                      )}
-                    />
-                  </Grid>
-                  <Grid item style={{ width: '100%' }}>
-                    <Button
-                      type='submit'
-                      variant='contained'
-                    >
-                      Submit
-                    </Button>
-                  </Grid>
-                </Grid>
-              </Grid>
-            </form>
-          </div>
-          <div className='form-container sign-in-container'>
-            <form
-              action='#'
-              onSubmit={handleSubmit(onSubmit)}
-            >
-              <h1>Sign in</h1>
-              <div className='social-container'>
-                {/* 소셜 로그인 아이콘 (네이버, 카카오, 구글) */}
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={naverCircle}
-                  />
-                </a>
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={kakaoCircle}
-                  />
-                </a>
-                <a href='#' className='social'>
-                  <img
-                    className='naverImg'
-                    alt='naverImg'
-                    src={googleCircle}
-                  />
-                </a>
-              </div>
-              <span>or use your account</span>
-              <input type='email' placeholder='Email' />
-              <input
-                type='password'
-                placeholder='Password'
-              />
-              <a href='#'>Forgot your password?</a>
-              <button>Sign In</button>
-            </form>
-          </div>
-          <div className='overlay-container'>
-            <div className='overlay'>
-              <div className='overlay-panel overlay-left'>
-                <h1>EXTRAVEL 회원가입 하기</h1>
-                <p>
-                  To keep connected with us please login
-                  with your personal info
-                </p>
-                <button
-                  className='ghost'
-                  id='signIn'
-                  onClick={handleSignInClick}
-                >
-                  Sign In
-                </button>
-              </div>
-              <div className='overlay-panel overlay-right'>
-                <h1>EXTRAVEL 로그인 하기</h1>
-                <p>
-                  Enter your personal details and start
-                  journey with us
-                </p>
-                <button
-                  className='ghost'
-                  id='signUp'
-                  onClick={handleSignUpClick}
-                >
-                  Sign Up
-                </button>
+        <div
+          className={`container ${isRightPanelActive ? 'right-panel-active' : ''}`}
+        >
+          <div className='container'>
+            <div className='form-container sign-up-container'>
+              <form
+                action='#'
+                onSubmit={handleSubmit(onSubmit)}
+              >
+                <h1>Create Account</h1>
+                <div className='social-container'>
+                  {/* 소셜 아이콘 (Facebook, Google, LinkedIn) */}
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={naverCircle}
+                    />
+                  </a>
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={kakaoCircle}
+                    />
+                  </a>
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={googleCircle}
+                    />
+                  </a>
+                </div>
+                <span>
+                  or use your email for registration
+                </span>
+                <Grid item>
+                  <Grid
+                    container
+                    direction={'column'}
+                    spacing={3}
+                  >
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='firstName'
+                        control={control}
+                        defaultValue={''}
+                        rules={{
+                          required:
+                            'First Name is required', // 필수 입력 필드 검증 메시지
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='First Name'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='lastName'
+                        control={control}
+                        defaultValue={''}
+                        rules={{
+                          required: 'Last Name is required', // 필수 입력 필드 검증 메시지
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='Last Name'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='phone'
+                        defaultValue={''}
+                        control={control}
+                        rules={{
+                          required:
+                            'Phone Number is required',
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='Phone Number'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='email'
+                        control={control}
+                        defaultValue={''}
+                        rules={{
+                          required: 'Email ID is required',
+                          pattern: {
+                            value:
+                              /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
+                            message:
+                              'Invalid email address',
+                          },
+                          minLength: {
+                            value: 6,
+                            message:
+                              'Email must be at least 6 characters',
+                          },
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='Email ID'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='password'
+                        defaultValue={''}
+                        control={control}
+                        rules={{
+                          required: 'Password is required',
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='Password'
+                            type='password'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Controller
+                        name='passwordConfirm'
+                        defaultValue={''}
+                        control={control}
+                        rules={{
+                          required:
+                            'Password confirmation is required', // 필수 입력 필드 검증 메시지
+                        }}
+                        render={({ field, fieldState }) => (
+                          <TextField
+                            label='Password'
+                            type='password'
+                            value={field.value}
+                            onChange={field.onChange}
+                            error={
+                              fieldState.error !== undefined
+                            }
+                            helperText={
+                              fieldState.error &&
+                              fieldState.error.message
+                            }
+                          />
+                        )}
+                      />
+                    </Grid>
+                    <Grid item style={{ width: '100%' }}>
+                      <Button
+                        type='submit'
+                        variant='contained'
+                      >
+                        Submit
+                      </Button>
+                    </Grid>
+                  </Grid>
+                </Grid>
+              </form>
+            </div>
+            <div className='form-container sign-in-container'>
+              <form
+                action='#'
+                onSubmit={handleSubmit(onSubmit)}
+              >
+                <h1>Sign in</h1>
+                <div className='social-container'>
+                  {/* 소셜 로그인 아이콘 (네이버, 카카오, 구글) */}
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={naverCircle}
+                    />
+                  </a>
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={kakaoCircle}
+                    />
+                  </a>
+                  <a href='#' className='social'>
+                    <img
+                      className='naverImg'
+                      alt='naverImg'
+                      src={googleCircle}
+                    />
+                  </a>
+                </div>
+                <span>or use your account</span>
+                <input type='email' placeholder='Email' />
+                <input
+                  type='password'
+                  placeholder='Password'
+                />
+                <a href='#'>Forgot your password?</a>
+                <button>Sign In</button>
+              </form>
+            </div>
+            <div className='overlay-container'>
+              <div className='overlay'>
+                <div className='overlay-panel overlay-left'>
+                  <h1>EXTRAVEL 회원가입 하기</h1>
+                  <p>
+                    To keep connected with us please login
+                    with your personal info
+                  </p>
+                  <button
+                    className='ghost'
+                    id='signIn'
+                    onClick={handleSignInClick}
+                  >
+                    Sign In
+                  </button>
+                </div>
+                <div className='overlay-panel overlay-right'>
+                  <h1>EXTRAVEL 로그인 하기</h1>
+                  <p>
+                    Enter your personal details and start
+                    journey with us
+                  </p>
+                  <button
+                    className='ghost'
+                    id='signUp'
+                    onClick={handleSignUpClick}
+                  >
+                    Sign Up
+                  </button>
+                </div>
               </div>
             </div>
           </div>
Index: src/index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root'),\r\n);\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n);\r\nroot.render(<App />);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.jsx b/src/index.jsx
--- a/src/index.jsx	
+++ b/src/index.jsx	
@@ -11,4 +11,3 @@
     <App />
   </BrowserRouter>,
 );
-root.render(<App />);
Index: src/App.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Section1 from './components/main/intro/Section1';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Section3 from './components/main/intro/Section3';\r\nimport Login from './components/user/Login';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Section1 />\r\n      <Router>\r\n        <Header />\r\n      </Router>\r\n      <Section3 />\r\n      <Login />\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.jsx b/src/App.jsx
--- a/src/App.jsx	
+++ b/src/App.jsx	
@@ -1,21 +1,21 @@
 import Section1 from './components/main/intro/Section1';
 import React from 'react';
-import { BrowserRouter as Router } from 'react-router-dom';
 import Header from './components/Header';
 import Footer from './components/Footer';
 import Section3 from './components/main/intro/Section3';
 import Login from './components/user/Login';
+import { Routes, Route } from 'react-router-dom';
 
 const App = () => {
   return (
     <>
-      <Section1 />
-      <Router>
-        <Header />
-      </Router>
+      <Header />
+      <Routes>
+        <Route path='/' element={<Section1 />} />
+        <Route path='/login' element={<Login />} />
+      </Routes>
       <Section3 />
-      <Login />
-      {/* <Footer /> */}
+      <Footer />
     </>
   );
 };
